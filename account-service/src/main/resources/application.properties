#spring.datasource.url= jdbc:postgresql://localhost:5432/account_service
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/account_service}
spring.datasource.username= postgres
spring.datasource.password= 123456

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.jpa.hibernate.ddl-auto= update

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.topic.name=account-service
spring.kafka.replication.factor=3
spring.kafka.partition.number=2
spring.kafka.consumer.group-id=kafka-user-listener
spring.kafka.consumer.auto-offset-reset=earliest
application.kafka.payment-request-log.auto-startup=true
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type=com.demo.dto.User
spring.kafka.consumer.level.concurrency=5
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.value.default.type=com.demo.dto.User

bezkoder.app.jwtSecret= ======================BezKoder=Spring===========================
bezkoder.app.jwtExpirationMs=86400000
server.port=8088